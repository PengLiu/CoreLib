<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.coredata</groupId>
		<artifactId>coredata-core-app-manager</artifactId>
		<version>1.0.0-SNAPSHOT</version>
	</parent>
	<artifactId>coredata-core-app-data-importor</artifactId>
	<properties>
		<docker.plugin.version>0.4.13</docker.plugin.version>
		<docker.image.prefix>deta</docker.image.prefix>
		<docker.registry>devops.detainfo.com</docker.registry>
		<root.version>v1.0.0</root.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.coredata</groupId>
			<artifactId>coredata-core-sdk</artifactId>
			<version>${product.version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-log4j12</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<mainClass>${start-class}</mainClass>
					<layout>ZIP</layout>
					<classifier>all</classifier>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>repackage</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<target>
								<unjar
									src="${project.build.directory}/${project.artifactId}-${project.version}-all.jar"
									dest="${project.build.directory}/assembly/work" />
							</target>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<configuration>
					<finalName>${project.artifactId}</finalName>
					<appendAssemblyId>false</appendAssemblyId>
					<descriptors>
						<!-- <descriptor>src/main/assembly/assembly-root.xml</descriptor> -->
						<descriptor>src/main/assembly/assembly.xml</descriptor>
					</descriptors>
				</configuration>
				<executions>
					<execution>
						<id>make-assembly</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>com.spotify</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>${docker.plugin.version}</version>
				<executions>
					<execution>
						<phase>install</phase>
						<goals>
							<goal>build</goal>
						</goals>
					</execution>
					<execution>
						<id>tag-image</id>
						<phase>install</phase>
						<goals>
							<goal>tag</goal>
						</goals>
						<configuration>
							<!-- <image>${docker.image.prefix}/${project.artifactId}-root:${root.version}</image> 
								<newName>${docker.registry}/${docker.image.prefix}/${project.artifactId}-root:${root.version}</newName> -->
							<image>${docker.image.prefix}/${project.artifactId}:${project.version}</image>
							<newName>${docker.registry}/${docker.image.prefix}/${project.artifactId}:${project.version}</newName>
						</configuration>
					</execution>
					<execution>
						<id>push-image</id>
						<phase>install</phase>
						<goals>
							<goal>push</goal>
						</goals>
						<configuration>
							<!-- <imageName>${docker.registry}/${docker.image.prefix}/${project.artifactId}-root:${root.version}</imageName> -->
							<imageName>${docker.registry}/${docker.image.prefix}/${project.artifactId}:${project.version}</imageName>
						</configuration>
					</execution>
				</executions>
				<configuration>
					<serverId>harbor</serverId>
					<registryUrl>http://${docker.registry}/v2/</registryUrl>
					<!-- <imageName>${docker.image.prefix}/${project.artifactId}-root:${root.version}</imageName> 
						<dockerDirectory>${project.basedir}/src/main/docker_root</dockerDirectory> -->
					<imageName>${docker.image.prefix}/${project.artifactId}:${project.version}</imageName>
					<dockerDirectory>${project.basedir}/src/main/docker</dockerDirectory>
					<resources>
						<resource>
							<targetPath>/</targetPath>
							<directory>${project.build.directory}</directory>
							<include>${project.artifactId}.tar</include>
						</resource>
					</resources>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>